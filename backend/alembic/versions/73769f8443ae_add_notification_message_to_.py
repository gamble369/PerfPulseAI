"""Add notification_message to PullRequestResult

Revision ID: 73769f8443ae
Revises: 4d3cb1cc4f64
Create Date: 2025-07-02 14:26:28.859477

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '73769f8443ae'
down_revision: Union[str, None] = '4d3cb1cc4f64'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('score_snapshots')
    op.drop_table('pull_request_events')
    with op.batch_alter_table('pull_request_results', schema=None) as batch_op:
        batch_op.add_column(sa.Column('notification_message', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('action',
               existing_type=sa.VARCHAR(length=30),
               type_=sa.String(length=50),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('pull_request_results', schema=None) as batch_op:
        batch_op.alter_column('action',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=30),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('notification_message')

    op.create_table('pull_request_events',
    sa.Column('id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('pr_node_id', sa.VARCHAR(length=100), nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('event_time', sa.DATETIME(), nullable=True),
    sa.Column('details', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['pr_node_id'], ['pull_requests.pr_node_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('score_snapshots',
    sa.Column('id', sa.TEXT(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('total_points', sa.INTEGER(), nullable=False),
    sa.Column('snapshot_time', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
